openapi: 3.0.0
info:
  title: TallerPcApi
  description: >-
    Proyecto planificado API-first con OAS, arquitectura global de
    microservicios con API Gateway y Eureka server en el que cada microservicio
    se ha estructurado con arquitectura hexagonal
  termsOfService: https://josepedevs.com/terms/
  contact:
    name: '- Soporte API de tu proyecto - '
    url: https://www.josepedevs.com/support
    email: josepedevs@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://{personname}.josepedevs.com:{port}/{basePath}
    description: PRODUCTION SERVER
    variables:
      personname:
        default: person
        description: >-
          personname used when you registered on the provider website, role will
          be checked to restrain access
      port:
        enum:
          - '8443'
          - '443'
        default: '8443'
      basePath:
        default: v1
  - url: https://{personname}.josepedevs.com:{port}/{basePath}
    description: PRE SERVER
    variables:
      personname:
        default: admin
        description: >-
          usuario con el que se quieren hacer las pruebas en el server de PRE,
          se comprobará el rol para limitar el acceso`
      port:
        enum:
          - '8333'
          - '333'
        default: '8333'
      basePath:
        default: v1
  - url: https://{personname}.josepedevs.com:{port}/{basePath}
    description: DEVELOPER SERVER
    variables:
      personname:
        default: admin
        description: >-
          usuario con el que se quieren hacer las pruebas a nivel local, si
          compronbará el rol para limitar el acceso`
      port:
        enum:
          - '8223'
          - '223'
        default: '8223'
      basePath:
        default: v1
paths:
  /persons:
    post:
      operationId: createPerson
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/persons'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/persons'
        '400':
          description: La petición falló, algún dato de los proporcionados no es válido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
    put:
      operationId: updatePerson
      summary: Actualiza un usuario existente
      parameters:
        - name: id_person
          in: query
          description: clave primaria de la tabla de usuarios
          required: true
          schema:
            type: string
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/persons'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/persons'
        '400':
          description: La petición falló, algún dato de los proporcionados no es válido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
    delete:
      operationId: deletePerson
      summary: Elimina un usuario
      parameters:
        - name: id_person
          in: query
          description: clave primaria de la tabla de usuarios
          required: true
          schema:
            type: string
            format: int
      responses:
        '204':
          description: Usuario eliminado exitosamente
        '400':
          description: La petición falló, posiblemente el usuario no exista
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
  /repairs_catalogue:
    put:
      operationId: updateCatalogueRepair
      summary: Actualiza un ítem del catálogo (una posible reparación ya existente)
      parameters:
        - name: id_repair
          in: query
          description: clave primaria de la tabla del catálogo de reparaciones
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/repairs_catalogue'
      responses:
        '200':
          description: Posible reparación actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repairs_catalogue'
        '400':
          description: La petición falló, algún dato de los proporcionados no es válido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
    delete:
      operationId: deleteCatalogueRepair
      summary: >-
        Elimina un ítem del catálogo (una de las posibles reparaciones que se
        pueden solicitar)
      parameters:
        - name: id_repair
          in: query
          description: clave primaria de la tabla de reparaciones (catálogo)
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Posible reparación eliminada exitosamente
        '400':
          description: La petición falló, algún dato de los proporcionados no es válido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
  /repair_orders:
    get:
      operationId: getRepairOrder
      summary: Lista todos los pedidos de reparación
      responses:
        '200':
          description: Lista de pedidos de reparación
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repair_order'
        '400':
          description: La petición falló, algún dato de los proporcionados no es válido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
        '403':
          description: >-
            Tus credenciales eran válidas pero no tienes permiso para acceder a
            este recurso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
    post:
      operationId: createRepairOrder
      summary: Crea un nuevo pedido de reparación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/repair_order'
      responses:
        '201':
          description: Pedido de reparación creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repair_order'
        '400':
          description: La petición falló, algún dato de los proporcionados no es válido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
    put:
      operationId: updateRepairOrder
      summary: Actualiza un pedido de reparación existente
      parameters:
        - name: id_order
          in: query
          description: clave primaria de la tabla de pedidos
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/repair_order'
      responses:
        '200':
          description: Pedido de reparación actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repair_order'
        '400':
          description: La petición falló, algún dato de los proporcionados no es válido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/errorMapList'
components:
  schemas:
    persons:
      description: Tabla de usuarios
      type: object
      required:
        - id_person
        - email
        - psswrd
      properties:
        id_person:
          type: string
          format: int
          readOnly: true
        email:
          type: string
        psswrd:
          type: string
        name:
          type: string
        role:
          type: string
        active:
          type: boolean
    repairs_catalogue:
      description: Tabla de posibles reparaciones (catálogo)
      type: object
      required:
        - id_repair
        - price
        - discount
        - active
      properties:
        id_repair:
          type: string
          format: int
          readOnly: true
        price:
          type: number
        discount:
          type: number
        active:
          type: boolean
    repair_order:
      description: Tabla de pedidos realizados (reparaciones solicitadas)
      type: object
      required:
        - id_order
        - id_person
        - id_repair
        - price
        - discount
        - order_date
        - active
      properties:
        id_order:
          type: string
          format: int
          readOnly: true
        id_repair:
          type: string
          format: int
        id_person:
          type: string
          format: int
        price:
          type: number
        order_date:
          type: string
          format: date-time
        discount:
          type: number
        active:
          type: boolean
    errorMapList:
      description: >-
        Schema for order table errors (for this project left the same as the
        order table but could be customized)
      type: object
      properties:
        invalid-params:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              reason:
                type: string
            required:
              - name
              - reason
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
